---
title: "Simulation study"
#format: gfm
html:
  embed-resources: true
execute:
  echo: false
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| message: false
#| warning: false

source(here::here("packages.R"))
invisible(lapply(list.files(here::here("R"), full.names = TRUE), source))
cols <- c("#CABEE9", "#7C7189", "#FAE093", "#D04E59", "#BC8E7D", "#2F3D70")
set.seed(895989)

# Set global ggplot settings
theme_set(
  theme_light(base_size = 16, base_family = "Roboto Condensed") +
    theme(
      strip.background = element_rect(fill = cols[2], colour = "white"),
      strip.text = element_text(colour = 'white')
    )
)

# Global labels for facets
all_labels <- labeller(
  prob_space = c("0.15" = "p = 0.15", "0.65" = "p = 0.65"),
  censoring_type = c(
    "admin" = "Admin. censoring",
    "exponential" = "Random censoring",
    "none" = "No censoring"
  ),
  failure_time_model = c(
    "correct_FG" = "Well specified FG", 
    "misspec_FG" = "Misspecified FG"
  )
)

# Read targets objects
tar_load(coefs_main)
tar_load(true_cuminc_all)
tar_load(pooled_preds_main)

# Add decent labels for the methods
method_labs <- c(
  "full" = "Full data",
  "CCA" = "Compl. cases",
  "mice_comp" = "MI cause-spec",
  "mice_subdist" = "MI subdist",
  "smcfcs_comp" = "SMC-FCS cause-spec",
  "smcfcs_finegray" = "SMC-FCS Fine-Gray"
)
coefs_main[, method := factor(method, levels = names(method_labs), labels = method_labs)]
pooled_preds_main[, method := factor(method, levels = names(method_labs), labels = method_labs)]
```

## Scenarios set-up

```{r}
times <- c(seq(0.001, 2.5, length.out = 400), seq(2.6, 10, length.out = 100))
scenarios <- expand.grid(
  mechanism = c("correct_FG", "misspec_FG"),
  p = c(0.15, 0.65),
  stringsAsFactors = FALSE
)
newdat <- data.frame(X = c(0, 1), Z = c(0, 0))

dat_true <- mapply(
  function(mechanism, p) {
    params_slug <- switch(
      mechanism,
      "misspec_FG" = paste0("params_weibull_lfps_", p),
      "correct_FG" = paste0("true_params_correct_FG_", p)
    )
    params <- do.call(tar_read, list(as.symbol(params_slug)))
    compute_true(
      t = times,
      newdat = newdat,
      params = params,
      model_type = mechanism
    ) |> cbind(p = p, mech = mechanism)
  },
  mechanism = scenarios$mechanism,
  p = scenarios$p,
  SIMPLIFY = FALSE,
  USE.NAMES = FALSE
) |> rbindlist()

# Start plots
dat_p1 <- dat_true[X == 0 & Z == 0] |>
  melt(
    variable.name = "hazard_type",
    value.name = "hazard",
    measure.vars = c("subdist_haz", "cs_haz")
  )

p1 <- dat_p1[!(hazard_type == "subdist_haz" & cause == 2)] |>
  ggplot(aes(time, hazard)) +
  geom_line(
    aes(
      group = interaction(hazard_type, cause),
      col = interaction(hazard_type, cause),
      linetype = interaction(hazard_type, cause)
    ),
    linewidth = 1.5, alpha = 0.8
  ) +
  facet_wrap(p * mech ~ ., ncol = 4, labeller = all_labels) +
  scale_color_manual(
    breaks = c("cs_haz.1", "cs_haz.2", "subdist_haz.1"),
    values = cols[c(1, 2, 5)],
    labels = c("Cause-spec cause 1", "Cause-spec cause 2", "Subdist. cause 1")
  ) +
  scale_linetype_manual(
    breaks = c("cs_haz.1", "cs_haz.2", "subdist_haz.1"),
    values = 1:3,
    labels = c("Cause-spec cause 1", "Cause-spec cause 2", "Subdist. cause 1")
  ) +
  coord_cartesian(ylim = c(0, 2)) +
  labs(
    y = "Baseline hazards",
    x = "Time",
    linetype = NULL,
    col = NULL
  )

p2 <- dat_true[X == 0 & Z == 0] |>
  ggplot(aes(time, cuminc)) +
  geom_line(
    aes(group = cause, col = cause, linetype = cause),
    linewidth = 1.5, alpha = 0.8
  ) +
  facet_wrap(p * mech ~ ., ncol = 4) +
  scale_color_manual(values = cols[c(1, 2)], labels = c("Cause 1", "Cause 2")) +
  scale_linetype_manual(values = 1:2, labels = c("Cause 1", "Cause 2")) +
  coord_cartesian(ylim = c(0, 1)) +
  theme(strip.background = element_blank(), strip.text.x = element_blank()) +
  labs(
    y = "Baseline cumulative incidence",
    x = "Time",
    linetype = NULL,
    col = NULL
  )

# Lower panel
dat_p3 <- dat_true[, .(
  HR_cs = cs_haz[X == 1] / cs_haz[X == 0],
  HR_subdist = subdist_haz[X == 1] / subdist_haz[X == 0]
), by = c("time", "cause", "p", "mech")] |>
  melt(
    variable.name = "HR_type",
    value.name = "HR",
    measure.vars = c("HR_cs", "HR_subdist")
  )

p3 <- dat_p3[!(HR_type == "HR_subdist" & cause == 2)]|>
  ggplot(aes(time, log(HR))) +
  geom_line(
    aes(
      group = interaction(HR_type, cause),
      col = interaction(HR_type, cause),
      linetype = interaction(HR_type, cause)
    ),
    linewidth = 1.5,
    alpha = 0.8
  ) +
  facet_wrap(p * mech ~ ., ncol = 4) +
  scale_color_manual(
    breaks = c("HR_cs.1", "HR_cs.2", "HR_subdist.1"),
    values = cols[c(1, 2, 5)],
    labels = c("Cause-spec cause 1", "Cause-spec cause 2", "Subdist. cause 1")
  ) +
  scale_linetype_manual(
    breaks = c("HR_cs.1", "HR_cs.2", "HR_subdist.1"),
    values = 1:3,
    labels = c("Cause-spec cause 1", "Cause-spec cause 2", "Subdist. cause 1")
  ) +
  geom_hline(yintercept = 0, col = "black", linetype = "dotted") +
  theme(strip.background = element_blank(), strip.text.x = element_blank()) +
  labs(
    y = "Log hazard ratio X = 1 vs X = 0",
    x = "Time",
    linetype = NULL,
    col = NULL
  )

p1 / p2 / p3

ggsave(
  plot = p1 / p2 / p3,
  "analysis/figures/scenarios_vis.pdf", # pdf later
  dpi = 300,
  width = 13,
  height = 9,
  device = cairo_pdf
)
```

## Log subdistribution hazard ratios

```{r}
sim_summ <- rsimsum::multisimsum(
  data = coefs_main,
  par = "term",
  estvarname = "estimate",
  se = "std.error",
  true = "true",
  methodvar = "method",
  ref = "Full data",
  ci.limits = c("conf.low", "conf.high"),
  x = TRUE,
  by = c("censoring_type", "failure_time_model", "prob_space")
)

# For shading
coefs_main[, relbias := 100 * (estimate - true) / true]
coefs_main[, dens := approxfun(density(relbias))(relbias), by = c(
  "method",
  "term",
  "censoring_type",
  "failure_time_model",
  "prob_space"
)]

# Do also for Z
coefs_main[term == "X" & method != "Full data"] |>
  ggplot(aes(method, relbias)) +
  geom_jitter(
    aes(
      col = method,
      alpha = dens
    ),
    size = 2.5,
    width = 0.25,
    shape = 16
  ) +
  scale_alpha_continuous(range = c(0.1, 0.75)) +
  facet_grid(
    failure_time_model * censoring_type ~ prob_space,
    labeller = all_labels
  ) +
  coord_flip() +
  theme(
    axis.text.x = element_text(angle = 90, hjust = 1),
    legend.position = "none"
  ) +
  scale_y_continuous(minor_breaks = NULL, breaks = c(0, 10, 25, 50, 75, -10, -25, -50, -75)) +
  scale_x_discrete(limits = rev) +
  geom_hline(
    aes(yintercept = 0),
    linetype = "solid",
    linewidth = 1,
    col = cols[3],
    alpha = 1
  ) +
  stat_summary(
    fun = mean,
    geom = "crossbar",
    fatten = 1.5,
    #linewidth = 0.5,
    col = "black",
    alpha = 0.75,
    lineend = "round"
  ) +
  scale_color_manual(values = cols[c(1, 2, 6, 4, 5)]) +
  labs(x = "Method", y = "100 * (Estimate - True) / True (%)")

#ggsave(
#  filename = "analysis/figures/bias_X_v2.pdf",
#  width = 7,
#  scale = 1.25,
#  height = 10,
#  device = cairo_pdf
#)
```

## Predicted cumulative incidence

## Miscellaneous vis

```{r}
dat_missmech <- generate_dataset(
  n = 2000,
  args_event_times = list(
    mechanism = "correct_FG",
    params = tar_read(true_params_correct_FG_0.15),
    censoring_type = "none"
  ),
  args_missingness = list(
    mech_params = list("prob_missing" = 0.4, "mechanism_expr" = "1.5 * Z")
  )
)

dat_missmech[, prob_miss_X := plogis(1.5 * Z)]
dat_missmech |> 
  ggplot(aes(X_obs, Z, col = prob_miss_X)) +
  geom_jitter(aes(shape = factor(X_missind)), width = 0.25, alpha = 0.75, size = 2) +
  scale_color_viridis_c(direction = -1)
```
